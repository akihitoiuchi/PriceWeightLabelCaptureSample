import com.android.Version

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

static def supportsNamespace() {
    def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
    def major = parsed[0].toInteger()
    def minor = parsed[1].toInteger()

    // Namespace support was added in AGP 7.3.0
    if (major == 7 && minor >= 3) {
        return true
    }

    return major >= 8
}

def isNewArchitectureEnabled() {
    // To opt-in for the New Architecture, you can either:
    // - Set `newArchEnabled` to true inside the `gradle.properties` file
    // - Invoke gradle with `-newArchEnabled=true`
    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

buildscript {
    // Simple helper that allows the root project to override versions declared by this library.
    ext.safeExtGet = { prop, fallback -> rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback }

    // Ensures backward compatibility
    ext.getKotlinVersion = {
        if (ext.has("kotlinVersion")) {
            ext.kotlinVersion()
        } else {
            ext.safeExtGet("kotlinVersion", "1.9.25")
        }
    }

    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${getKotlinVersion()}")
    }
}

android {
    if (supportsNamespace()) {
        namespace "com.scandit.datacapture.reactnative.barcode"
    }

    compileSdkVersion safeExtGet("compileSdkVersion", 33)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 23)
        targetSdkVersion safeExtGet("targetSdkVersion", 33)
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main {
            if (this.supportsNamespace()) {
                manifest.srcFile "src/main/AndroidManifestNew.xml" // no package on it
            }
            if (this.isNewArchitectureEnabled()) {
                kotlin.srcDirs += ['src/main/newArch/kotlin']
            } else {
                kotlin.srcDirs += ['src/main/oldArch/kotlin']
            }
        }
    }
}

if (file( "${rootProject.projectDir}/build-test.gradle").exists()) {
    apply from: "${rootProject.projectDir}/build-test.gradle"
}

dependencies {
    def sdk_version = "7.5.0"

    println("Version of the native sdk used in this build: ${safeExtGet("global_sdk_version", sdk_version)}")
    api project(path: ":scandit-react-native-datacapture-core")

    if (findProject(":scandit-datacapture-frameworks-barcode") != null) {
        api project(":scandit-datacapture-frameworks-barcode")
    } else {
        api "com.scandit.datacapture.frameworks:barcode:${safeExtGet("global_sdk_version", sdk_version)}"
    }

    // For < 0.71, this will be from the local maven repo
    // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
    //noinspection GradleDynamicVersion
    implementation "com.facebook.react:react-native:+"  // From node_modules
}
