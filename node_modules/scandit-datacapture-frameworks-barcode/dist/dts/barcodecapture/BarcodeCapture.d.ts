import { CameraSettings, DataCaptureContext, DataCaptureMode, DefaultSerializeable, PrivateDataCaptureMode } from "scandit-datacapture-frameworks-core";
import { BarcodeCaptureFeedback } from "./BarcodeCaptureFeedback";
import { BarcodeCaptureListener } from "./BarcodeCaptureListener";
import { BarcodeCaptureSettings } from "./BarcodeCaptureSettings";
import { BarcodeCaptureListenerController } from "./controller/BarcodeCaptureListenerController";
export declare class BarcodeCapture extends DefaultSerializeable implements DataCaptureMode {
    get isEnabled(): boolean;
    set isEnabled(isEnabled: boolean);
    get context(): DataCaptureContext | null;
    get feedback(): BarcodeCaptureFeedback;
    set feedback(feedback: BarcodeCaptureFeedback);
    static get recommendedCameraSettings(): CameraSettings;
    private type;
    private _isEnabled;
    private _feedback;
    private settings;
    private privateContext;
    private get _context();
    private set _context(value);
    private listeners;
    private controller;
    private static get barcodeCaptureDefaults();
    static forContext(context: DataCaptureContext | null, settings: BarcodeCaptureSettings): BarcodeCapture;
    private constructor();
    applySettings(settings: BarcodeCaptureSettings): Promise<void>;
    addListener(listener: BarcodeCaptureListener): void;
    removeListener(listener: BarcodeCaptureListener): void;
}
export interface PrivateBarcodeCapture extends PrivateDataCaptureMode {
    _context: DataCaptureContext | null;
    listeners: BarcodeCaptureListener[];
    isInListenerCallback: boolean;
    controller: BarcodeCaptureListenerController;
}
