import { DefaultSerializeable, DataCaptureOverlay, Brush, DataCaptureView } from "scandit-datacapture-frameworks-core";
import { TrackedBarcode } from "../barcode";
import { BarcodeBatch } from "./BarcodeBatch";
import { BarcodeBatchBasicOverlayListener } from "./BarcodeBatchBasicOverlayListener";
import { BarcodeBatchBasicOverlayStyle } from "./BarcodeBatchBasicOverlayStyle";
export declare class BarcodeBatchBasicOverlay extends DefaultSerializeable implements DataCaptureOverlay {
    private type;
    private barcodeBatch;
    private _view;
    private _style;
    private _hasListener;
    private _dataCaptureViewId;
    private _listener;
    get listener(): BarcodeBatchBasicOverlayListener | null;
    set listener(newListener: BarcodeBatchBasicOverlayListener | null);
    private set view(value);
    private get view();
    get defaultBrush(): Brush | null;
    set defaultBrush(newBrush: Brush | null);
    private _brush;
    get brush(): Brush | null;
    set brush(newBrush: Brush | null);
    private _shouldShowScanAreaGuides;
    private controller;
    get shouldShowScanAreaGuides(): boolean;
    set shouldShowScanAreaGuides(shouldShow: boolean);
    get style(): BarcodeBatchBasicOverlayStyle;
    static withBarcodeBatch(barcodeBatch: BarcodeBatch): BarcodeBatchBasicOverlay;
    static withBarcodeBatchForView(barcodeBatch: BarcodeBatch, view: DataCaptureView | null): BarcodeBatchBasicOverlay;
    static withBarcodeBatchForViewWithStyle(barcodeBatch: BarcodeBatch, view: DataCaptureView | null, style: BarcodeBatchBasicOverlayStyle): BarcodeBatchBasicOverlay;
    private static get barcodeBatchDefaults();
    private constructor();
    setBrushForTrackedBarcode(brush: Brush, trackedBarcode: TrackedBarcode): Promise<void>;
    clearTrackedBarcodeBrushes(): Promise<void>;
}
