import { CameraSettings, DataCaptureContext, DefaultSerializeable } from "scandit-datacapture-frameworks-core";
import { BarcodePickSettings } from "./BarcodePickSettings";
import { BarcodePickProductProvider } from "./BarcodePickProductProvider";
import { BarcodePickScanningListener } from "./BarcodePickScanningListener";
import { BarcodePickListener } from "./BarcodePickListener";
export declare class BarcodePick extends DefaultSerializeable {
    private type;
    private privateContext;
    private listeners;
    private _hasScanningListeners;
    private modeListeners;
    private _hasListeners;
    private isInListenerCallback;
    private _settings;
    private _productProvider;
    private _controller;
    private get controller();
    private set controller(value);
    static createRecommendedCameraSettings(): CameraSettings;
    private static get barcodePickDefaults();
    static get recommendedCameraSettings(): CameraSettings;
    constructor(dataCaptureContext: DataCaptureContext, settings: BarcodePickSettings, productProvider: BarcodePickProductProvider);
    addScanningListener(listener: BarcodePickScanningListener): void;
    removeScanningListener(listener: BarcodePickScanningListener): void;
    private checkAndSubscribeScanningListeners;
    private checkAndUnsubscribeScanningListeners;
    addListener(listener: BarcodePickListener): void;
    removeListener(listener: BarcodePickListener): void;
    private checkAndSubscribeListeners;
    private checkAndUnsubscribeListeners;
}
export interface PrivateBarcodePick {
    privateContext: DataCaptureContext | null;
    listeners: BarcodePickScanningListener[];
    modeListeners: BarcodePickListener[];
    _productProvider: BarcodePickProductProvider;
    isInListenerCallback: boolean;
    didChange: () => Promise<void>;
    _hasScanningListeners: boolean;
    _hasListeners: boolean;
}
