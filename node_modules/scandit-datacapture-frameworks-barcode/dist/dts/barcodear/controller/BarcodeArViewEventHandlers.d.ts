import { EventPayload } from "scandit-datacapture-frameworks-core";
import { BarcodeArViewProxy } from "./BarcodeArViewController";
import { BaseBarcodeArView } from "../BarcodeArView";
import { BarcodeAr } from "../BarcodeAr";
export interface BarcodeArSessionEventPayload {
    session: string;
    frameId: string | null;
    viewId: number;
}
export interface BarcodeArViewEventPayload {
    viewId: number;
}
export declare class BarcodeArViewEventHandlers {
    private view;
    private barcodeAr;
    private proxy;
    private highlightCache;
    private annotationsCache;
    constructor(view: BaseBarcodeArView, barcodeAr: BarcodeAr, proxy: BarcodeArViewProxy);
    clearCaches(): void;
    handleDidTapHighlightForBarcode(ev: EventPayload): Promise<void>;
    handleHighlightForBarcode(ev: EventPayload): Promise<void>;
    handleAnnotationForBarcode(ev: EventPayload): Promise<void>;
    handleDidTapPopoverEvent(ev: EventPayload): Promise<void>;
    handleDidTapPopoverButtonEvent(ev: EventPayload): Promise<void>;
    handleDidTapInfoAnnotationRightIconEvent(ev: EventPayload): Promise<void>;
    handleDidTapInfoAnnotationLeftIconEvent(ev: EventPayload): Promise<void>;
    handleDidTapInfoAnnotationEvent(ev: EventPayload): Promise<void>;
    handleDidTapInfoAnnotationHeaderEvent(ev: EventPayload): Promise<void>;
    handleDidTapInfoAnnotationFooterEvent(ev: EventPayload): Promise<void>;
    handleDidUpdateSession(ev: EventPayload): Promise<void>;
    private notifyListenersOfDidUpdateSession;
}
