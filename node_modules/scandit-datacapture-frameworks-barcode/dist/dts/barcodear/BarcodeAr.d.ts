import { DefaultSerializeable, DataCaptureContext, CameraSettings } from "scandit-datacapture-frameworks-core";
import { BarcodeArFeedback } from "./BarcodeArFeedback";
import { BarcodeArSettings } from "./BarcodeArSettings";
import { BarcodeArListener } from "./BarcodeArListener";
import { BarcodeArViewController } from "./controller/BarcodeArViewController";
export declare class BarcodeAr extends DefaultSerializeable {
    private type;
    private privateContext;
    private _feedback;
    private _settings;
    private listeners;
    private _controller;
    private get controller();
    private set controller(value);
    private static get barcodeArDefaults();
    static get recommendedCameraSettings(): CameraSettings;
    static forContext(context: DataCaptureContext, settings: BarcodeArSettings): BarcodeAr;
    private constructor();
    applySettings(settings: BarcodeArSettings): Promise<void>;
    addListener(listener: BarcodeArListener): void;
    private checkAndSubscribeListeners;
    removeListener(listener: BarcodeArListener): void;
    private checkAndUnsubscribeListeners;
    private subscribeNativeListeners;
    private unsubscribeNativeListeners;
    private didChange;
    private get _context();
    private set _context(value);
    get feedback(): BarcodeArFeedback;
    set feedback(feedback: BarcodeArFeedback);
    toJSON(): object;
}
export interface PrivateBarcodeAr {
    _context: DataCaptureContext | null;
    listeners: BarcodeArListener[];
    isInListenerCallback: boolean;
    didChange: () => Promise<void>;
    subscribeNativeListeners: () => void;
    unsubscribeNativeListeners: () => void;
    controller: BarcodeArViewController | null;
}
