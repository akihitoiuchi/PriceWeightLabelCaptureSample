import { DefaultSerializeable, Quadrilateral, QuadrilateralJSON } from "scandit-datacapture-frameworks-core";
import { EncodingRange, EncodingRangeJSON } from "./EncodingRange";
import { Symbology } from "../symbology";
import { CompositeFlag } from "./CompositeFlag";
import { StructuredAppendData, StructuredAppendDataJSON } from "./StructuredAppendData";
export declare class Barcode extends DefaultSerializeable {
    private _symbology;
    get symbology(): Symbology;
    private _data;
    get data(): string | null;
    private _rawData;
    get rawData(): string;
    private _compositeData;
    get compositeData(): string | null;
    private _compositeRawData;
    get compositeRawData(): string;
    private _addOnData;
    get addOnData(): string | null;
    private _encodingRanges;
    get encodingRanges(): EncodingRange[];
    private _location;
    get location(): Quadrilateral;
    private _isGS1DataCarrier;
    get isGS1DataCarrier(): boolean;
    private _compositeFlag;
    get compositeFlag(): CompositeFlag;
    private _isColorInverted;
    get isColorInverted(): boolean;
    private _symbolCount;
    get symbolCount(): number;
    private _frameID;
    get frameID(): number;
    get isStructuredAppend(): boolean;
    private _structuredAppendData;
    get structuredAppendData(): StructuredAppendData | null;
    private get selectionIdentifier();
    private static fromJSON;
}
export interface BarcodeJSON {
    symbology: string;
    data: string | null;
    rawData: string;
    addOnData: string | null;
    compositeData: string | null;
    compositeRawData: string;
    isGS1DataCarrier: boolean;
    compositeFlag: string;
    isColorInverted: boolean;
    symbolCount: number;
    frameId: number;
    encodingRanges: EncodingRangeJSON[];
    location: QuadrilateralJSON;
    structuredAppendData: StructuredAppendDataJSON | null;
}
export interface PrivateBarcode {
    readonly selectionIdentifier: string;
    barcodeId: string;
    fromJSON(json: BarcodeJSON): Barcode;
}
