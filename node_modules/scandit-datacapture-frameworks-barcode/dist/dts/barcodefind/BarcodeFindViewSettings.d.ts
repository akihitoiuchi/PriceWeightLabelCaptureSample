import { Color, DefaultSerializeable } from "scandit-datacapture-frameworks-core";
export declare class BarcodeFindViewSettings extends DefaultSerializeable {
    private static get barcodeFindViewSettingsDefaults();
    private _inListItemColor;
    private _notInListItemColor;
    private _soundEnabled;
    private _hapticEnabled;
    private _hardwareTriggerEnabled;
    private _hardwareTriggerKeyCode;
    private _progressBarStartColor;
    private _progressBarFinishColor;
    constructor(inListItemColor: Color, notInListItemColor: Color, soundEnabled: boolean, hapticEnabled: boolean, hardwareTriggerEnabled?: boolean, hardwareTriggerKeyCode?: number, progressBarStartColor?: Color, progressBarFinishColor?: Color);
    static withHardwareTriggers(inListItemColor: Color, notInListItemColor: Color, soundEnabled: boolean, hapticEnabled: boolean, hardwareTriggerEnabled: boolean, hardwareTriggerKeyCode: number): BarcodeFindViewSettings;
    static withProgressBarColor(inListItemColor: Color, notInListItemColor: Color, soundEnabled: boolean, hapticEnabled: boolean, progressBarStartColor: Color, progressBarFinishColor: Color): BarcodeFindViewSettings;
    static withProgressBarColorAndHardwareTriggers(inListItemColor: Color, notInListItemColor: Color, soundEnabled: boolean, hapticEnabled: boolean, hardwareTriggerEnabled: boolean, hardwareTriggerKeyCode: number, progressBarStartColor: Color, progressBarFinishColor: Color): BarcodeFindViewSettings;
    get inListItemColor(): Color;
    get notInListItemColor(): Color;
    get soundEnabled(): boolean;
    get hapticEnabled(): boolean;
    get hardwareTriggerEnabled(): boolean;
    get hardwareTriggerKeyCode(): number | null;
    get progressBarStartColor(): Color;
    get progressBarFinishColor(): Color;
}
