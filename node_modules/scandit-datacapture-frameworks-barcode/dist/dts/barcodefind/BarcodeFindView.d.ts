import { Anchor, CameraSettings, DataCaptureContext } from 'scandit-datacapture-frameworks-core';
import { BarcodeFindViewSettings } from './BarcodeFindViewSettings';
import { BarcodeFind } from './BarcodeFind';
import { BarcodeFindViewUiListener } from './BarcodeFindViewUiListener';
export interface BarcodeFindView {
}
export declare class BaseBarcodeFindView {
    private isViewCreated;
    private _dataCaptureContext;
    private _barcodeFind;
    private _barcodeFindViewSettings?;
    private _cameraSettings?;
    private _startSearching;
    private controller;
    private _isInitialized;
    private _viewId;
    get viewId(): number;
    get barcodeFind(): BarcodeFind;
    private _barcodeFindViewUiListener;
    get barcodeFindViewUiListener(): BarcodeFindViewUiListener | null;
    set barcodeFindViewUiListener(value: BarcodeFindViewUiListener | null);
    get context(): DataCaptureContext;
    constructor(context: DataCaptureContext, barcodeFind: BarcodeFind, barcodeFindViewSettings?: BarcodeFindViewSettings, cameraSettings?: CameraSettings);
    static forMode(dataCaptureContext: DataCaptureContext, barcodeFind: BarcodeFind): BaseBarcodeFindView;
    static forModeWithViewSettings(dataCaptureContext: DataCaptureContext, barcodeFind: BarcodeFind, viewSettings: BarcodeFindViewSettings): BaseBarcodeFindView;
    static forModeWithViewSettingsAndCameraSettings(dataCaptureContext: DataCaptureContext, barcodeFind: BarcodeFind, viewSettings: BarcodeFindViewSettings, cameraSettings: CameraSettings): BaseBarcodeFindView;
    private static get barcodeFindViewDefaults();
    stopSearching(): Promise<void>;
    startSearching(): Promise<void>;
    pauseSearching(): Promise<void>;
    show(): Promise<void>;
    hide(): Promise<void>;
    static get hardwareTriggerSupported(): boolean;
    createNativeView(viewId: number): Promise<void>;
    removeNativeView(): Promise<void>;
    get shouldShowUserGuidanceView(): boolean;
    set shouldShowUserGuidanceView(value: boolean);
    get shouldShowHints(): boolean;
    set shouldShowHints(value: boolean);
    get shouldShowCarousel(): boolean;
    set shouldShowCarousel(value: boolean);
    get shouldShowPauseButton(): boolean;
    set shouldShowPauseButton(value: boolean);
    get shouldShowFinishButton(): boolean;
    set shouldShowFinishButton(value: boolean);
    get shouldShowProgressBar(): boolean;
    set shouldShowProgressBar(value: boolean);
    get shouldShowTorchControl(): boolean;
    set shouldShowTorchControl(value: boolean);
    get shouldShowZoomControl(): boolean;
    set shouldShowZoomControl(value: boolean);
    get torchControlPosition(): Anchor;
    set torchControlPosition(value: Anchor);
    get textForCollapseCardsButton(): string | null;
    set textForCollapseCardsButton(value: string | null);
    get textForAllItemsFoundSuccessfullyHint(): string | null;
    set textForAllItemsFoundSuccessfullyHint(value: string | null);
    get textForItemListUpdatedHint(): string | null;
    set textForItemListUpdatedHint(value: string | null);
    get textForItemListUpdatedWhenPausedHint(): string | null;
    set textForItemListUpdatedWhenPausedHint(value: string | null);
    get textForPointAtBarcodesToSearchHint(): string | null;
    set textForPointAtBarcodesToSearchHint(value: string | null);
    get textForMoveCloserToBarcodesHint(): string | null;
    set textForMoveCloserToBarcodesHint(value: string | null);
    get textForTapShutterToPauseScreenHint(): string | null;
    set textForTapShutterToPauseScreenHint(value: string | null);
    get textForTapShutterToResumeSearchHint(): string | null;
    set textForTapShutterToResumeSearchHint(value: string | null);
    private update;
    dispose(): void;
    toJSON(): object;
}
export interface PrivateBarcodeFindView {
    toJSON(): object;
}
