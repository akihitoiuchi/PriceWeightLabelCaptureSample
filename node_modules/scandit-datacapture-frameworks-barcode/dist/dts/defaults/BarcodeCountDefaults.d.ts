import { Anchor, Brush, CameraSettings, Feedback } from "scandit-datacapture-frameworks-core";
import { BarcodeCountViewStyle, BarcodeFilterSettings } from "../barcodecount";
interface BarcodeCountToolbarSettings {
    audioOnButtonText: string;
    audioOffButtonText: string;
    audioButtonContentDescription: string | null;
    audioButtonAccessibilityHint: string | null;
    audioButtonAccessibilityLabel: string | null;
    vibrationOnButtonText: string;
    vibrationOffButtonText: string;
    vibrationButtonContentDescription: string | null;
    vibrationButtonAccessibilityHint: string | null;
    vibrationButtonAccessibilityLabel: string | null;
    strapModeOnButtonText: string;
    strapModeOffButtonText: string;
    strapModeButtonContentDescription: string | null;
    strapModeButtonAccessibilityHint: string | null;
    strapModeButtonAccessibilityLabel: string | null;
    colorSchemeOnButtonText: string;
    colorSchemeOffButtonText: string;
    colorSchemeButtonContentDescription: string | null;
    colorSchemeButtonAccessibilityHint: string | null;
    colorSchemeButtonAccessibilityLabel: string | null;
}
export interface BarcodeCountViewSettingsDefaults {
    style: BarcodeCountViewStyle;
    shouldShowUserGuidanceView: boolean;
    shouldShowListButton: boolean;
    shouldShowExitButton: boolean;
    shouldShowShutterButton: boolean;
    shouldShowHints: boolean;
    shouldShowClearHighlightsButton: boolean;
    shouldShowSingleScanButton: boolean;
    shouldShowFloatingShutterButton: boolean;
    shouldShowToolbar: boolean;
    shouldDisableModeOnExitButtonTapped: boolean;
    defaultNotInListBrush: Brush;
    defaultRecognizedBrush: Brush;
    defaultAcceptedBrush: Brush;
    defaultRejectedBrush: Brush;
    shouldShowScanAreaGuides: boolean;
    clearHighlightsButtonText: string;
    exitButtonText: string;
    textForTapShutterToScanHint: string;
    textForScanningHint: string;
    textForMoveCloserAndRescanHint: string;
    textForMoveFurtherAndRescanHint: string;
    shouldShowListProgressBar: boolean;
    toolbarSettings: BarcodeCountToolbarSettings;
    listButtonAccessibilityHint: string;
    listButtonAccessibilityLabel: string;
    listButtonContentDescription: string;
    exitButtonAccessibilityHint: string;
    exitButtonAccessibilityLabel: string;
    exitButtonContentDescription: string;
    shutterButtonAccessibilityHint: string;
    shutterButtonAccessibilityLabel: string;
    shutterButtonContentDescription: string;
    floatingShutterButtonAccessibilityHint: string;
    floatingShutterButtonAccessibilityLabel: string;
    floatingShutterButtonContentDescription: string;
    clearHighlightsButtonAccessibilityHint: string;
    clearHighlightsButtonAccessibilityLabel: string;
    clearHighlightsButtonContentDescription: string;
    singleScanButtonAccessibilityHint: string;
    singleScanButtonAccessibilityLabel: string;
    singleScanButtonContentDescription: string;
    shouldShowTorchControl: boolean;
    torchControlPosition: Anchor;
    tapToUncountEnabled: boolean;
    textForTapToUncountHint: string;
    hardwareTriggerSupported: boolean;
}
export interface BarcodeCountDefaults {
    RecommendedCameraSettings: CameraSettings;
    Feedback: {
        success: Feedback;
        failure: Feedback;
    };
    BarcodeCountSettings: {
        expectOnlyUniqueBarcodes: boolean;
        barcodeFilterSettings: BarcodeFilterSettings;
        disableModeWhenCaptureListCompleted: boolean;
        mappingEnabled: boolean;
    };
    BarcodeCountView: BarcodeCountViewSettingsDefaults;
}
export declare function getBarcodeCountDefaults(): BarcodeCountDefaults;
export declare function parseBarcodeCountDefaults(jsonDefaults: any): BarcodeCountDefaults;
export {};
