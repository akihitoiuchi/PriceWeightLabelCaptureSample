import { BaseController, Brush, EventEmitter } from 'scandit-datacapture-frameworks-core';
import { LabelCaptureBasicOverlay } from '../view/LabelCaptureBasicOverlay';
import { LabelField } from '../LabelField';
import { CapturedLabel } from '../CapturedLabel';
export declare enum LabelCaptureBasicOverlayListenerEvents {
    brushForFieldOfLabel = "LabelCaptureBasicOverlayListener.brushForFieldOfLabel",
    brushForLabel = "LabelCaptureBasicOverlayListener.brushForLabel",
    didTapLabel = "LabelCaptureBasicOverlayListener.didTapLabel"
}
export interface LabelCaptureBasicOverlayProxy {
    $setBrushForFieldOfLabel({ dataCaptureViewId, brushJson, fieldName, trackingId }: {
        dataCaptureViewId: number;
        brushJson: string | null;
        fieldName: string;
        trackingId: number;
    }): Promise<void>;
    $setBrushForLabel({ dataCaptureViewId, brushJson, trackingId }: {
        dataCaptureViewId: number;
        brushJson: string | null;
        trackingId: number;
    }): Promise<void>;
    $registerListenerForBasicOverlayEvents({ dataCaptureViewId }: {
        dataCaptureViewId: number;
    }): Promise<void>;
    $unregisterListenerForBasicOverlayEvents({ dataCaptureViewId }: {
        dataCaptureViewId: number;
    }): Promise<void>;
    $updateLabelCaptureBasicOverlay({ dataCaptureViewId, basicOverlayJson }: {
        dataCaptureViewId: number;
        basicOverlayJson: string;
    }): Promise<void>;
    subscribeForEvents(events: string[]): void;
    unsubscribeFromEvents(events: string[]): void;
    dispose(): void;
    eventEmitter: EventEmitter;
}
export declare class LabelCaptureBasicOverlayController extends BaseController<LabelCaptureBasicOverlayProxy> {
    private overlay;
    private constructor();
    static forOverlay(overlay: LabelCaptureBasicOverlay): LabelCaptureBasicOverlayController;
    setBrushForFieldOfLabel(brush: Brush | null, field: LabelField, label: CapturedLabel): Promise<void>;
    setBrushForLabel(brush: Brush | null, label: CapturedLabel): Promise<void>;
    subscribeListener(): Promise<void>;
    private handleBrushForFieldOfLabel;
    private handleBrushForLabel;
    private handleDidTapLabel;
    unsubscribeListener(): Promise<void>;
    updateBasicOverlay(basicOverlayJson: string): Promise<void>;
    private get dataCaptureViewId();
}
export interface LabelCaptureBasicOverlayEventPayload {
    field: string;
    label: string;
}
